<controls:OptionsWindow x:Class="HotEject.Wpf.Views.OptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HotEject.Wpf.Views"
             xmlns:controls="clr-namespace:HotEject.Wpf.Controls"
             xmlns:infrastructure="clr-namespace:HotEject.Wpf.Infrastructure"
             xmlns:cal="http://www.caliburnproject.org"                                               
             xmlns:props="clr-namespace:HotEject.Wpf.Properties"
             mc:Ignorable="d"
             d:DesignHeight="300" MaxWidth="250" SizeToContent="Height" >
    <controls:OptionsWindow.Style>
        <Style TargetType="controls:OptionsWindow">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowIsVisible}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </controls:OptionsWindow.Style>
    <controls:OptionsWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/hot-eject;component/Themes/Generic.xaml"/>
                <ResourceDictionary Source="/hot-eject;component/Resources/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </controls:OptionsWindow.Resources>

    <Grid >
        <Grid.Resources>
            <infrastructure:BindingProxy x:Key="proxy" Data="{Binding}" />
        </Grid.Resources>
    <Grid.RowDefinitions>
        <RowDefinition Height="32"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition />
    </Grid.RowDefinitions>
    <Border  VerticalAlignment="Stretch" Background="{StaticResource Accent}">
            <DockPanel>
                <Border Height="20" Child="{StaticResource UsbIcon}"/>
                <Button 
             x:Name="OptionsWindow" Height="20" DockPanel.Dock="Right" Content="{StaticResource MenuIcon}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource OptionsMenuButtonStyle}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Click">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu DataContext="{Binding Data, Source={StaticResource proxy}}">
                                        <MenuItem Header="{x:Static props:Resources.Help}" cal:Message.Attach="ShowHelp" />
                                        <MenuItem Header="{x:Static props:Resources.About}" cal:Message.Attach="ShowAbout"/>
                                        <Separator/>
                                        <MenuItem Header="{x:Static props:Resources.Preferences}" cal:Message.Attach="ShowPreferences"/>
                                        <Separator/>
                                        <MenuItem Header="{x:Static props:Resources.Exit}" cal:Message.Attach="ExitApplication"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Border></Border>
            </DockPanel>
        </Border>
        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <ListBox VerticalContentAlignment="Top" BorderThickness="0" Name="Devices" Height="Auto">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Border
                                IsEnabled="{Binding IsMounted}"
                                Margin="10 0 0 0" Width="220" Padding="10 10 20 10" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" HorizontalAlignment="Stretch"  Grid.IsSharedSizeScope="True">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Foreground="{StaticResource ContentForeground}">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat=" {0} ({1})">
                                                <Binding Path="Caption"/>
                                                <Binding Path="LogicalDrives"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.Style>
                    <Style TargetType="{x:Type ListBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Items.Count,RelativeSource={RelativeSource Self}}"  Value="0">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border Margin="10 0 0 0" Width="220" Padding="10 10 20 10" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" HorizontalAlignment="Stretch">
                                                <TextBlock Foreground="{StaticResource ContentForeground}" Text="{x:Static props:Resources.NoRemovable}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="cal:Message.Attach"  Value="[Event MouseDoubleClick] = [Action Eject($dataContext)]"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </ScrollViewer>
    </Grid>
</controls:OptionsWindow>
